name: CD

# main, develop 브랜치에 push 작업 요청시 작동
on:
  push:
    branches:
      - main
      - develop

permissions:
  contents: read

# 실행할 작업들
jobs:
  CD:
    runs-on: ubuntu-latest
    steps:
      #JDK setting
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      #dev, prod 환경에 맞는 .yml 생성
      # create application-dev.yml
      - name: make application-dev.yml
        if: contains(github.ref, 'develop') # branch가 develop인 경우
        run: |
          cd ./src/main/resources
          touch ./application-dev.yml
          echo "${{ secrets.PROPERTIES_DEV }}" > ./application-dev.yml
        shell: bash

      #firebase admin sdk .json 파일 생성
#      - name: make firebase-adminsdk.json
#        run: |
#          cd ./src/main/resources
#          touch ./firebase-adminsdk.json
#          echo "${{ secrets.FIREBASE_ADMIN_SDK }}" > ./firebase-adminsdk.json
#        shell: bash
      - name: create-firebase-adminsdk.json
        id: create-firebase-json
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "firebase-adminsdk.json"
          json: ${{ secrets.FIREBASE_ADMIN_SDK }}
      - name: Move JSON file to current directory
        run: mv ${{ github.workspace }}/firebase-adminsdk.json ./



      # Gradle 권한 부여
      - name: Grant Execute permission for gradlew
        run: chmod +x gradlew
        shell: bash

      # develop build(with test)
      - name: Develop Build With Test
        if: contains(github.ref, 'develop')
        env:
          SPRING_PROFILES_ACTIVE: dev
        run: ./gradlew clean build --stacktrace
        shell: bash

      # docker build & push
      - name: Docker build & push to dev # 개발 서버용(develop) Docker build & push
        if: contains(github.ref, 'develop')
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Dockerfile-dev -t ${{ secrets.DOCKER_REPO }}/zzanz-dev .
          docker push ${{ secrets.DOCKER_REPO }}/zzanz-dev

      # SSH 접속 및 배포
      # deploy to develop
      - name: Deploy to Develop
        uses: appleboy/ssh-action@master
        id: deploy-dev
        if: contains(github.ref, 'develop')
        with:
          host: ${{ secrets.DEV_SERVER_IP }}
          username: ${{ secrets.DEV_SERVER_USER }}
          password: ${{ secrets.DEV_SERVER_PASSWORD }}
          port: ${{ secrets.DEV_SERVER_PORT }}
          script: |
            sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            sudo docker rm -f $(docker ps -q -a)
            sudo docker pull ${{ secrets.DOCKER_REPO }}/zzanz-dev
            docker-compose up -d
            docker image prune -f